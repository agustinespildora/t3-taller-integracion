{"version":3,"sources":["socket.js","components/Map.jsx","components/Flight.jsx","components/Dialog.jsx","components/Chat.jsx","App.js","index.js"],"names":["socket","socketio","connect","transports","path","SocketContext","React","createContext","Map","useContext","useState","setFlightsList","polylinesList","setPolylinesList","handleFlights","useCallback","flights","map","flight","origin","destination","useEffect","emit","on","rel","href","integrity","crossorigin","src","className","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","Polyline","pathOptions","color","positions","Marker","position","Popup","Flight","airline","passengers","passenger","name","age","Dialog","flightsList","Chat","App","Provider","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0KAGaA,E,OAASC,EAASC,QAC3B,wDACA,CACEC,WAAY,CAAC,aACbC,KAAM,aAICC,EAAgBC,IAAMC,gB,8DCgEpBC,MAtEf,WACE,IAKMR,EAASS,qBAAWJ,GANb,EAQyBK,mBAAS,IARlC,mBAQOC,GARP,aAS6BD,mBAAS,IATtC,mBASNE,EATM,KASSC,EATT,KAWPC,EAAgBC,uBAAY,SAACC,GACjCA,EAAQC,KAAI,SAACC,GAAD,OACVL,GAAkB,SAACD,GAAD,4BAAuBA,GAAvB,CAAsC,CAACM,EAAOC,OAAQD,EAAOE,qBAEjFT,EAAeK,KAEd,IAoBH,OAXAK,qBAAU,WAOR,OAJArB,EAAOsB,KAAK,UAAW,IAEvBtB,EAAOuB,GAAG,WAAW,SAAAP,GAAO,OAAIF,EAAcE,MAEvC,eAEN,CAAChB,EAAQc,IAGV,gCACE,sBACEU,IAAI,aACJC,KAAK,mDACLC,UAAU,kGACVC,YAAY,KAEd,wBACEC,IAAI,kDACJF,UAAU,kGACVC,YAAY,KAEd,qBAAKE,UAAU,MAAf,iCAGA,8BACE,eAACC,EAAA,EAAD,CAAcC,OAAQ,CAAC,EAAG,GAAIC,KAAM,EAAGC,iBAAiB,EAAxD,UACE,cAACC,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,uDAEN,cAACC,EAAA,EAAD,CAAUC,YAtDE,CAAEC,MAAO,QAsDeC,UAAW5B,IAC/C,cAAC6B,EAAA,EAAD,CAAQC,SAAU,CAAC,EAAG,GAAtB,SACE,eAACC,EAAA,EAAD,mCACuB,uBADvB,sC,QC5CGC,EAnBA,SAAC,GAAc,IAAb1B,EAAY,EAAZA,OAEf,OACE,sBAAKW,UAAW,cAAhB,UACE,yCAAYX,EAAOC,UACnB,0CAAaD,EAAOE,eACpB,+CAAeF,EAAO2B,WACtB,2CACC3B,EAAO4B,WAAW7B,KAAI,SAAC8B,GAAD,OACnB,gCACE,0CAAaA,EAAUC,QACvB,wCAAWD,EAAUE,iBC6BlBC,EArCA,SAAC,GAAQ,eAEtB,IAAMlD,EAASS,qBAAWJ,GAFL,EAIiBK,mBAAS,IAJ1B,mBAIdyC,EAJc,KAIDxC,EAJC,KAMfG,EAAgBC,uBAAY,SAACC,GACjCL,EAAeK,KACd,IAiBH,OAdAK,qBAAU,WASR,OANArB,EAAOsB,KAAK,UAAW,IAEvBtB,EAAOuB,GAAG,WAAW,SAAAP,GAAO,OAAIF,EAAcE,MAIvC,eAGN,CAAChB,EAAQc,IAGV,gCACE,uCACA,qBAAKe,UAAW,gBAAhB,SACGsB,EAAYlC,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAAQA,OAAQA,aC1BXkC,MARf,WACE,OACE,8BACE,wCC0BSC,MAvBf,WAEE,OACE,cAAChD,EAAciD,SAAf,CAAwBC,MAAOvD,EAA/B,SACE,sBAAK6B,UAAU,YAAf,UACE,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,MAGF,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,MAGF,qBAAKA,UAAU,OAAf,SACE,cAAC,EAAD,YCjBV2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.93ce58fa.chunk.js","sourcesContent":["import socketio from \"socket.io-client\";\nimport React from 'react';\n\nexport const socket = socketio.connect(\n    'wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl', \n    {\n      transports: [\"websocket\"],\n      path: \"/flights\"\n    }\n  );\n  \nexport const SocketContext = React.createContext();","import '../index.css';\nimport React, {useState, useContext, useCallback, useEffect} from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport {SocketContext} from '../socket';\n\nfunction Map() {\n  const polyline = [\n    [-34.82264, -58.533321],\n    [-33.382761, -70.803203],\n  ]\n  const limeOptions = { color: 'lime' }\n  const socket = useContext(SocketContext);\n\n  const [flightsList, setFlightsList] = useState([]);\n  const [polylinesList, setPolylinesList] = useState([]);\n\n  const handleFlights = useCallback((flights) => {\n    flights.map((flight) => (\n      setPolylinesList( (polylinesList) => [...polylinesList, [flight.origin, flight.destination]])\n    ))\n    setFlightsList(flights);\n    // dibujar_trayectorias();\n  }, []);\n\n  // function dibujar_trayectorias(){\n  //   flightsList.map((flight) => (\n  //     setPolylinesList( (polylinesList) => [...polylinesList, [flight.origin, flight.destination]])\n  //   ))\n  // }\n\n\n  useEffect(() => {\n    // as soon as the component is mounted, do the following tasks:\n    // subscribe to socket events\n    socket.emit(\"FLIGHTS\", {});\n    //receive events\n    socket.on('FLIGHTS', flights => handleFlights(flights));\n    \n    return () => {\n    };\n  }, [socket, handleFlights]);\n\n  return (\n    <div>\n      <link\n        rel=\"stylesheet\"\n        href=\"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\"\n        integrity=\"sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A==\"\n        crossorigin=\"\"\n      />\n      <script\n        src=\"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\"\n        integrity=\"sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA==\"\n        crossorigin=\"\"\n      ></script>\n      <div className=\"Map\">\n        Mapa en tiempo real\n      </div>\n      <div>\n        <MapContainer center={[0, 0]} zoom={1} scrollWheelZoom={false}>\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          <Polyline pathOptions={limeOptions} positions={polylinesList} />\n          <Marker position={[0, 0]}>\n            <Popup>\n              A pretty CSS3 popup. <br /> Easily customizable.\n            </Popup>\n          </Marker>\n        </MapContainer>\n      </div>\n    </div>\n  );\n}\nexport default Map;","import '../index.css';\nimport React from 'react';\n\nconst Flight = ({flight}) => {\n\n  return (\n    <div className={'flight-info'}>\n      <p>Origen: {flight.origin}</p>\n      <p>Destino: {flight.destination}</p>\n      <p>Aerol√≠nea: {flight.airline}</p>\n      <p>Pasajeros:</p>\n      {flight.passengers.map((passenger) => (\n          <div>\n            <li>Nombre: {passenger.name}</li>\n            <li>Edad: {passenger.age}</li>\n          </div>\n\n        ))}\n    </div>\n  );\n};\n\nexport default Flight;","import '../index.css';\nimport React, {useState, useContext, useCallback, useEffect} from 'react';\nimport {SocketContext} from '../socket';\nimport Flight from './Flight.jsx';\n\n\nconst Dialog = ({}) => {\n\n  const socket = useContext(SocketContext);\n\n  const [flightsList, setFlightsList] = useState([]);\n\n  const handleFlights = useCallback((flights) => {\n    setFlightsList(flights);\n  }, []);\n\n\n  useEffect(() => {\n    // as soon as the component is mounted, do the following tasks:\n    // subscribe to socket events\n    socket.emit(\"FLIGHTS\", {});\n    //receive events\n    socket.on('FLIGHTS', flights => handleFlights(flights));\n\n    \n\n    return () => {\n\n    };\n  }, [socket, handleFlights]);\n\n  return (\n    <div>\n      <p>Vuelos</p>\n      <div className={'row-container'}>\n        {flightsList.map((flight) => (\n          <Flight flight={flight}/>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Dialog;","import '../index.css';\n\nfunction Chat() {\n  return (\n    <div>\n      <p>Chat</p>\n    </div>\n  );\n}\n\nexport default Chat;\n","import React, { useState } from 'react';\nimport {SocketContext, socket} from './socket';\nimport Map from './components/Map.jsx';\nimport Dialog from './components/Dialog.jsx';\nimport Chat from './components/Chat.jsx';\nimport './index.css';\n\n\nfunction App() {\n\n  return (\n    <SocketContext.Provider value={socket}>\n      <div className=\"container\">\n        <div className=\"uno\">\n          <Map\n          />\n        </div>\n        <div className=\"dos\">\n          <Chat\n          />\n        </div>\n        <div className=\"tres\">\n          <Dialog\n          />\n        </div>\n\n      </div>\n    </SocketContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}