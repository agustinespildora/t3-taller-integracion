{"version":3,"sources":["socket.js","components/Map.jsx","components/Flight.jsx","components/Dialog.jsx","chat-back.js","components/Chat.jsx","App.js","index.js"],"names":["socket","socketio","connect","transports","path","SocketContext","React","createContext","Map","LatLngBounds","blackOptions","color","colorOptions","useContext","useState","setFlightsList","positionsList","setPositionsList","setLen","polylinesList","setPolylinesList","handleFlights","useCallback","flights","map","flight","origin","destination","length","handlePositions","pos","position","useEffect","emit","on","rel","href","integrity","crossorigin","src","className","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","polyline","i","Polyline","pathOptions","positions","Flight","code","airline","plane","seats","passengers","passenger","name","age","Dialog","flightsList","NEW_CHAT_MESSAGE_EVENT","ChatBack","messageObjects","setMessageObjects","socketRef","useRef","current","socketIOClient","incomingMessageObject","disconnect","sendMessageObject","senderName","messageBody","message","Chat","props","newMessage","setNewMessage","nickName","setNickName","messageObject","date","Date","toLocaleString","value","onChange","event","target","placeholder","title","onClick","App","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAGaA,EAASC,IAASC,QAC3B,wDACA,CACEC,WAAY,CAAC,aACbC,KAAM,aAICC,EAAgBC,IAAMC,gB,qDC0FpBC,MA9Ff,WAOiB,IAAIC,eAAa,EAAE,UAAW,WAAY,EAAE,WAAY,YADvE,IAQMC,EAAe,CAAEC,MAAO,SACxBC,EAAe,CAND,CAAED,MAAO,QACV,CAAEA,MAAO,OACR,CAAEA,MAAO,QACP,CAAEA,MAAO,UACT,CAAEA,MAAO,WAGzBX,EAASa,qBAAWR,GAhBb,EAkByBS,mBAAS,IAlBlC,mBAkBOC,GAlBP,aAoB6BD,mBAAS,IApBtC,mBAoBNE,EApBM,KAoBSC,EApBT,OAqBSH,mBAAS,GArBlB,mBAqBDI,GArBC,aAsB6BJ,mBAAS,IAtBtC,mBAsBNK,EAtBM,KAsBSC,EAtBT,OAuBiCN,mBAAS,IAvB1C,mBAyBPO,GAzBO,UAyBSC,uBAAY,SAACC,GACjCA,EAAQC,KAAI,SAACC,GAAD,OACVL,GAAkB,SAACD,GAAD,4BAAuBA,GAAvB,CAAsC,CAACM,EAAOC,OAAQD,EAAOE,qBAGjFT,EAAOK,EAAQK,QACfb,EAAeQ,KACd,KAGGM,EAAkBP,uBAAY,SAACQ,GACrCb,GAAkB,SAACD,GAAD,4BAAwBA,GAAxB,CAAuC,CAAC,CAACc,EAAIC,SAAS,GAAID,EAAIC,SAAS,IAAK,CAACD,EAAIC,SAAS,GAAK,KAAYD,EAAIC,SAAS,GAAK,cAC5I,IAwBH,OAtBAC,qBAAU,WAOR,OAJAhC,EAAOiC,KAAK,UAAW,IAEvBjC,EAAOkC,GAAG,WAAW,SAAAX,GAAO,OAAIF,EAAcE,MAEvC,eAEN,CAACvB,EAAQqB,IAEZW,qBAAU,WAOR,OAJAhC,EAAOiC,KAAK,WAAY,IAExBjC,EAAOkC,GAAG,YAAY,SAAAJ,GAAG,OAAID,EAAgBC,MAEtC,eAEN,CAAC9B,EAAQ6B,IAGV,gCACE,sBACEM,IAAI,aACJC,KAAK,mDACLC,UAAU,kGACVC,YAAY,KAEd,wBACEC,IAAI,kDACJF,UAAU,kGACVC,YAAY,KAEd,qBAAKE,UAAU,QAEf,wEACA,8BACE,eAACC,EAAA,EAAD,CAAcC,OAAQ,CAAC,EAAG,GAAIC,KAAM,EAAGC,iBAAiB,EAAxD,UACE,cAACC,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,uDAEL5B,EAAcK,KAAI,SAACwB,EAAUC,GAAX,OACjB,cAACC,EAAA,EAAD,CAAUC,YAAavC,EAAaqC,EAAI,GAAIG,UAAWJ,OAExDhC,EAAcQ,KAAI,SAACO,EAAUkB,GAAX,OACjB,cAACC,EAAA,EAAD,CAAUC,YAAazC,EAAc0C,UAAWrB,gB,QCrE7CsB,EAtBA,SAAC,GAAgB,IAAd5B,EAAa,EAAbA,OAEhB,OACE,sBAAKe,UAAW,oBAAhB,UACE,wCAAWf,EAAO6B,QAClB,yCAAY7B,EAAOC,OAAO,GAA1B,KAAgCD,EAAOC,OAAO,MAC9C,0CAAaD,EAAOE,YAAY,GAAhC,KAAsCF,EAAOE,YAAY,MACzD,+CAAeF,EAAO8B,WACtB,2CAAW9B,EAAO+B,SAClB,2CAAc/B,EAAOgC,SACrB,2CACChC,EAAOiC,WAAWlC,KAAI,SAACmC,GAAD,OACnB,gCACE,0CAAaA,EAAUC,QACvB,wCAAWD,EAAUE,iBC4BlBC,EAvCA,SAAC,GAAQ,eAEtB,IAAM9D,EAASa,qBAAWR,GAFL,EAIiBS,mBAAS,IAJ1B,mBAIdiD,EAJc,KAIDhD,EAJC,KAMfM,EAAgBC,uBAAY,SAACC,GACjCR,EAAeQ,KACd,IAiBH,OAdAS,qBAAU,WASR,OANAhC,EAAOiC,KAAK,UAAW,IAEvBjC,EAAOkC,GAAG,WAAW,SAAAX,GAAO,OAAIF,EAAcE,MAIvC,eAGN,CAACvB,EAAQqB,IAGV,gCACE,qDACA,oBAAImB,UAAW,cAAf,iCACA,qBAAKA,UAAW,uBAAhB,SACGuB,EAAYvC,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAAQA,OAAQA,aCjCpBuC,G,MAAyB,QAwChBC,EAtCE,WAAO,IAAD,EACuBnD,mBAAS,IADhC,mBACdoD,EADc,KACEC,EADF,KAEfC,EAAYC,mBAClBrC,qBAAU,WAiBR,OAfAoC,EAAUE,QAAUC,IARE,yDAQgC,CACpDnE,KAAM,WACND,WAAY,CAAC,eAIfiE,EAAUE,QAAQpC,GAAG8B,GAAwB,SAACQ,GAI5CL,GAAkB,SAACD,GAAD,4BAAwBA,GAAxB,CAAwCM,UAKrD,WACLJ,EAAUE,QAAQG,gBAEnB,IAYH,MAAO,CAAEP,iBAAgBQ,kBAPC,SAACC,EAAYC,GACrCR,EAAUE,QAAQrC,KAAK+B,EAAwB,CAC7CJ,KAAMe,EACNE,QAASD,OCwCAE,EAnEF,SAACC,GAAW,IAAD,EACwBd,IAAtCC,EADc,EACdA,eAAgBQ,EADF,EACEA,kBADF,EAGc5D,mBAAS,IAHvB,mBAGfkE,EAHe,KAGHC,EAHG,OAIUnE,mBAAS,IAJnB,mBAIfoE,EAJe,KAILC,EAJK,KA2BtB,OACE,sBAAK3C,UAAU,sBAAf,UACE,uEACA,qBAAKA,UAAU,qBAAf,SACE,oBAAIA,UAAU,gBAAd,SACG0B,EAAe1C,KAAI,SAAC4D,EAAenC,GAAhB,OAClB,qBAEET,UAAS,uBACP4C,EAAcxB,OAASsB,EAAW,aAAe,oBAHrD,UAME,qBAAK1C,UAAU,YAAf,UAjBQ6C,EAiB+BD,EAAcC,KAhBnD,IAAIC,KAAKD,GACRE,oBAgBFH,EAAcxB,KAPjB,IAOwB,KACrBwB,EAAcP,UAPV5B,GAZjB,IAAoBoC,SAwBhB,0BACEG,MAAOR,EACPS,SAzCyB,SAACC,GAG9BT,EAAcS,EAAMC,OAAOH,QAuCvBI,YAAY,wBACZpD,UAAU,4BAEZ,uBACA,0BACEqD,MAAM,SACNL,MAAON,EACPO,SAvCiB,SAACC,GACtBP,EAAYO,EAAMC,OAAOH,QAuCrBI,YAAY,kBACZpD,UAAU,aAEZ,wBAAQsD,QA/Cc,WACxBpB,EAAkBQ,EAAUF,GAC5BC,EAAc,KA6CwBzC,UAAU,sBAA9C,sBCvCSuD,MAvBf,WAEE,OACE,cAAC1F,EAAc2F,SAAf,CAAwBR,MAAOxF,EAA/B,SACE,sBAAKwC,UAAU,YAAf,UACE,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,MAGF,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,MAGF,qBAAKA,UAAU,OAAf,SACE,cAAC,EAAD,YCjBVyD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.49df8ccd.chunk.js","sourcesContent":["import socketio from \"socket.io-client\";\nimport React from 'react';\n\nexport const socket = socketio.connect(\n    'wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl', \n    {\n      transports: [\"websocket\"],\n      path: \"/flights\"\n    }\n  );\n  \nexport const SocketContext = React.createContext();","import '../index.css';\nimport React, {useState, useContext, useCallback, useEffect} from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline, ImageOverlay} from 'react-leaflet';\nimport { LatLngBounds, Icon, L } from 'leaflet';\nimport {SocketContext} from '../socket';\n\n\nfunction Map() {\n  // const polyline = [\n  //   [-34.82264, -58.533321],\n  //   [-33.382761, -70.803203],\n  // ]\n\n  const plane_url = \"https://cdn-0.emojis.wiki/emoji-pics/facebook/airplane-facebook.png\"\n  const bounds = new LatLngBounds([-34.82264, -58.533321], [-33.382761, -70.803203])\n\n  const limeOptions = { color: 'lime' }\n  const redOptions = { color: 'red' }\n  const blueOptions = { color: 'blue' }\n  const orangeOptions = { color: 'orange' }\n  const purpleOptions = { color: 'violet' }\n  const blackOptions = { color: 'black' }\n  const colorOptions = [limeOptions, redOptions, blueOptions, orangeOptions, purpleOptions]\n  const socket = useContext(SocketContext);\n\n  const [flightsList, setFlightsList] = useState([]);\n  // const [positionsDict, setPositionsDict] = useState({})\n  const [positionsList, setPositionsList] = useState([]);\n  const [len, setLen] = useState(0);\n  const [polylinesList, setPolylinesList] = useState([]);\n  const [polylinesColors, setPolylinesColors] = useState([]);\n\n  const handleFlights = useCallback((flights) => {\n    flights.map((flight) => (\n      setPolylinesList( (polylinesList) => [...polylinesList, [flight.origin, flight.destination]])\n      \n    ))\n    setLen(flights.length);\n    setFlightsList(flights);\n  }, []);\n\n\n  const handlePositions = useCallback((pos) => {\n  setPositionsList( (positionsList) =>  [...positionsList, [[pos.position[0], pos.position[1]], [pos.position[0] + 0.00000001, pos.position[1] + 0.000000001]]]);\n  }, []);\n\n  useEffect(() => {\n    // as soon as the component is mounted, do the following tasks:\n    // subscribe to socket events\n    socket.emit(\"FLIGHTS\", {});\n    //receive events\n    socket.on('FLIGHTS', flights => handleFlights(flights));\n    \n    return () => {\n    };\n  }, [socket, handleFlights]);\n\n  useEffect(() => {\n    // as soon as the component is mounted, do the following tasks:\n    // subscribe to socket events\n    socket.emit(\"POSITION\", {});\n    //receive events\n    socket.on('POSITION', pos => handlePositions(pos));\n    \n    return () => {\n    };\n  }, [socket, handlePositions]);\n\n  return (\n    <div>\n      <link\n        rel=\"stylesheet\"\n        href=\"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\"\n        integrity=\"sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A==\"\n        crossorigin=\"\"\n      />\n      <script\n        src=\"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\"\n        integrity=\"sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA==\"\n        crossorigin=\"\"\n      ></script>\n      <div className=\"Map\">\n      </div>\n      <h3>Mapa en tiempo real 🗺️</h3>\n      <div>\n        <MapContainer center={[0, 0]} zoom={1} scrollWheelZoom={false}>\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          {polylinesList.map((polyline, i) => (\n            <Polyline pathOptions={colorOptions[i % 5]} positions={polyline} />\n          ))}\n          {positionsList.map((position, i) => (\n            <Polyline pathOptions={blackOptions} positions={position} />\n          ))}\n        </MapContainer>\n      </div>\n    </div>\n  );\n}\nexport default Map;","import '../index.css';\nimport React from 'react';\n\nconst Flight = ({ flight }) => {\n\n  return (\n    <div className={'flight-info vuelo'}>\n      <p>Vuelo: {flight.code}</p>\n      <p>Origen: {flight.origin[0]}, {flight.origin[1]}</p>\n      <p>Destino: {flight.destination[0]}, {flight.destination[1]}</p>\n      <p>Aerolínea: {flight.airline}</p>\n      <p>Avión: {flight.plane}</p>\n      <p>Asientos: {flight.seats}</p>\n      <p>Pasajeros:</p>\n      {flight.passengers.map((passenger) => (\n          <div>\n            <li>Nombre: {passenger.name}</li>\n            <li>Edad: {passenger.age}</li>\n          </div>\n\n        ))}\n    </div>\n  );\n};\n\nexport default Flight;","import '../index.css';\nimport React, {useState, useContext, useCallback, useEffect} from 'react';\nimport {SocketContext} from '../socket';\nimport Flight from './Flight.jsx';\n\n\nconst Dialog = ({}) => {\n\n  const socket = useContext(SocketContext);\n\n  const [flightsList, setFlightsList] = useState([]);\n\n  const handleFlights = useCallback((flights) => {\n    setFlightsList(flights);\n  }, []);\n\n\n  useEffect(() => {\n    // as soon as the component is mounted, do the following tasks:\n    // subscribe to socket events\n    socket.emit(\"FLIGHTS\", {});\n    //receive events\n    socket.on('FLIGHTS', flights => handleFlights(flights));\n\n    \n\n    return () => {\n\n    };\n  }, [socket, handleFlights]);\n\n  return (\n    <div>\n      <h3>Vuelos 🛫</h3>\n      <h4 className={'align-right'}>scroll 👇</h4>\n      <div className={'row-container fights'}>\n        {flightsList.map((flight) => (\n          <Flight flight={flight}/>\n        ))}\n      </div>\n\n    </div>\n  );\n};\n\nexport default Dialog;","import socketIOClient from 'socket.io-client';\nimport React, {useState, useContext, useCallback, useEffect, useRef,} from 'react';\n// const SOCKET_SERVER_URL = 'http://localhost:4000';\nconst SOCKET_SERVER_URL = 'http://tarea-3-websocket.2021-1.tallerdeintegracion.cl';\nconst NEW_CHAT_MESSAGE_EVENT = 'CHAT';\n\nconst ChatBack = () => {\n  const [messageObjects, setMessageObjects] = useState([]); // Sent and received messages\n  const socketRef = useRef();\n  useEffect(() => {\n    // Creates a WebSocket connection\n    socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\n      path: '/flights',\n      transports: ['websocket'],\n    });\n\n    // Listens for incoming messages\n    socketRef.current.on(NEW_CHAT_MESSAGE_EVENT, (incomingMessageObject) => {\n      // const incomingMessageObject = {\n      //   ...messageObject,\n      // };\n      setMessageObjects((messageObjects) => [...messageObjects, incomingMessageObject]);\n    });\n\n    // Destroys the socket reference\n    // when the connection is closed\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, []);\n\n  // Sends a message to the server that\n  // forwards it to all users in the same room\n\n  const sendMessageObject = (senderName, messageBody) => {\n    socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\n      name: senderName,\n      message: messageBody,\n    });\n  };\n\n  return { messageObjects, sendMessageObject };\n};\n\nexport default ChatBack;","import '../messages.css';\nimport ChatBack from '../chat-back';\nimport React, {useState, useContext, useCallback, useEffect} from 'react';\nimport {SocketContext} from '../socket';\nimport socketIOClient from 'socket.io-client';\n\n// const SOCKET_SERVER_URL = 'http://localhost:4000';\n// const SOCKET_SERVER_URL = 'http://tarea-3-websocket.2021-1.tallerdeintegracion.cl';\n// const NEW_CHAT_MESSAGE_EVENT = 'CHAT';\n\nconst Chat = (props) => {\n  const { messageObjects, sendMessageObject } = ChatBack(); // Creates a websocket and manages messaging\n\n  const [newMessage, setNewMessage] = useState(''); // Message to be sent\n  const [nickName, setNickName] = useState(''); // Message to be sent\n  // const nickName = 'Agustín Espíldora';\n\n  const handleNewMessageChange = (event) => {\n    // Checks wether the change was becouse of an Enter key press event,\n    // so the newMessage Variable dos not update itsvalue\n    setNewMessage(event.target.value);\n  };\n\n  const handleSendMessage = () => {\n    sendMessageObject(nickName, newMessage);\n    setNewMessage('');\n  };\n  const handleNickName = (event) => {\n    setNickName(event.target.value);\n  }\n\n\n  function dateFormat(date){\n    var date1 = new Date(date);\n    return date1.toLocaleString()\n  }\n  \n  return (\n    <div className=\"chat-room-container\">\n      <h3>Chat de torre de control 🏢</h3>\n      <div className=\"messages-container\">\n        <ol className=\"messages-list\">\n          {messageObjects.map((messageObject, i) => (\n            <li\n              key={i}\n              className={`message-item ${\n                messageObject.name === nickName ? 'my-message' : 'received-message'\n              }`}\n            >\n              <div className=\"chat-date\">{dateFormat(messageObject.date)}</div>\n              {messageObject.name} {': '}\n              {messageObject.message}\n            </li>\n          ))}\n        </ol>\n      </div>\n      <textarea\n        value={newMessage}\n        onChange={handleNewMessageChange}\n        placeholder=\"Escribe un mensaje...\"\n        className=\"new-message-input-field\"\n      />\n      <h4></h4>\n      <textarea\n        title=\"Nombre\"\n        value={nickName}\n        onChange={handleNickName}\n        placeholder=\"Elige un nombre\"\n        className=\"nickname\"\n      />\n      <button onClick={handleSendMessage} className=\"send-message-button\">\n        Send\n      </button>\n    </div>\n  );\n};\n\nexport default Chat;","import React, { useState, useContext, useEffect } from 'react';\nimport {SocketContext, socket} from './socket';\nimport Map from './components/Map.jsx';\nimport Dialog from './components/Dialog.jsx';\nimport Chat from './components/Chat.jsx';\nimport './index.css';\n\n\nfunction App() {\n  \n  return (\n    <SocketContext.Provider value={socket}>\n      <div className=\"container\">\n        <div className=\"uno\">\n          <Map\n          />\n        </div>\n        <div className=\"dos\">\n          <Chat\n          />\n        </div>\n        <div className=\"tres\">\n          <Dialog\n          />\n        </div>\n\n      </div>\n    </SocketContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}