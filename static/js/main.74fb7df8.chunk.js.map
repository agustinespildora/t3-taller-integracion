{"version":3,"sources":["socket.js","plane.png","components/Map.jsx","components/Flight.jsx","components/Dialog.jsx","chat-back.js","components/Chat.jsx","App.js","index.js"],"names":["socket","socketio","connect","transports","path","SocketContext","React","createContext","Map","LatLngBounds","colorOptions","color","useContext","useState","setFlightsList","setLen","polylinesList","setPolylinesList","handleFlights","useCallback","flights","map","flight","origin","destination","length","useEffect","emit","on","rel","href","integrity","crossorigin","src","className","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","polyline","i","Polyline","pathOptions","positions","Marker","position","Popup","Flight","airline","passengers","passenger","name","age","Dialog","flightsList","NEW_CHAT_MESSAGE_EVENT","ChatBack","messageObjects","setMessageObjects","socketRef","useRef","current","socketIOClient","incomingMessageObject","disconnect","sendMessageObject","senderName","messageBody","message","Chat","props","newMessage","setNewMessage","SENDER_NAME","messageObject","date","Date","toLocaleString","value","onChange","event","target","placeholder","onClick","App","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74fb7df8.chunk.js","sourcesContent":["import socketio from \"socket.io-client\";\nimport React from 'react';\n\nexport const socket = socketio.connect(\n    'wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl', \n    {\n      transports: [\"websocket\"],\n      path: \"/flights\"\n    }\n  );\n  \nexport const SocketContext = React.createContext();","export default __webpack_public_path__ + \"static/media/plane.ca8d18f8.png\";","import '../index.css';\nimport React, {useState, useContext, useCallback, useEffect} from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline, ImageOverlay} from 'react-leaflet';\nimport { LatLngBounds, Icon, L } from 'leaflet';\nimport {SocketContext} from '../socket';\nimport plane from '../plane.png';\nimport MyIcon from './MyIcon.jsx';\n\nfunction Map() {\n  // const polyline = [\n  //   [-34.82264, -58.533321],\n  //   [-33.382761, -70.803203],\n  // ]\n\n  const plane_url = \"https://cdn-0.emojis.wiki/emoji-pics/facebook/airplane-facebook.png\"\n  // var myicon = new L.icon({iconUrl: plane, iconAnchor: new L.Point(16, 16)});\n  const bounds = new LatLngBounds([-34.82264, -58.533321], [-33.382761, -70.803203])\n  // let bound = ([\n  //   [\n  //     center[1] - height / 2,\n  //     center[0] - width / 2\n  //   ],\n  //   [\n  //     center[1] + height / 2,\n  //     center[0] + width / 2\n  //   ]\n  // ]);\n  const limeOptions = { color: 'lime' }\n  const redOptions = { color: 'red' }\n  const blueOptions = { color: 'blue' }\n  const orangeOptions = { color: 'orange' }\n  const purpleOptions = { color: 'violet' }\n  const colorOptions = [limeOptions, redOptions, blueOptions, orangeOptions, purpleOptions]\n  const socket = useContext(SocketContext);\n\n  const [flightsList, setFlightsList] = useState([]);\n  // const [positionsDict, setPositionsDict] = useState({});\n  const [len, setLen] = useState(0);\n  const [polylinesList, setPolylinesList] = useState([]);\n  const [polylinesColors, setPolylinesColors] = useState([]);\n\n  const handleFlights = useCallback((flights) => {\n    flights.map((flight) => (\n      setPolylinesList( (polylinesList) => [...polylinesList, [flight.origin, flight.destination]])\n      \n    ))\n    setLen(flights.length);\n    setFlightsList(flights);\n  }, []);\n\n  // const handlePositions = useCallback((pos) => {\n  //   // console.log(pos)\n  //   // for (let index = 0; index < len; index++) {\n  //   //   const flight = flightsList[index];\n  //   //   if (flight.code === pos.code){\n        \n  //   //   }\n  //   // }\n  //   console.log(positionsDict);\n  //   if (positionsDict[pos.code]) {\n  //     setPositionsDict( (positionsDict) =>  positionsDict[pos.code].push([pos.position[0], pos.position[1]]));\n  //   }\n  //   else {\n  //     setPositionsDict( (positionsDict) =>  positionsDict[pos.code] = [[pos.position[0], pos.position[1]]]);\n  //   }\n  // }, []);\n\n  useEffect(() => {\n    // as soon as the component is mounted, do the following tasks:\n    // subscribe to socket events\n    socket.emit(\"FLIGHTS\", {});\n    //receive events\n    socket.on('FLIGHTS', flights => handleFlights(flights));\n    \n    return () => {\n    };\n  }, [socket, handleFlights]);\n\n  // useEffect(() => {\n  //   // as soon as the component is mounted, do the following tasks:\n  //   // subscribe to socket events\n  //   socket.emit(\"POSITION\", {});\n  //   //receive events\n  //   socket.on('POSITION', pos => handlePositions(pos));\n    \n  //   return () => {\n  //   };\n  // }, [socket, handlePositions]);\n\n  return (\n    <div>\n      <link\n        rel=\"stylesheet\"\n        href=\"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\"\n        integrity=\"sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A==\"\n        crossorigin=\"\"\n      />\n      <script\n        src=\"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\"\n        integrity=\"sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA==\"\n        crossorigin=\"\"\n      ></script>\n      <div className=\"Map\">\n        Mapa en tiempo real\n      </div>\n      <div>\n        <MapContainer center={[0, 0]} zoom={1} scrollWheelZoom={false}>\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          {/* <ImageOverlay\n            url={plane_url}\n            bounds={bounds}\n            zIndex={10}\n          /> */}\n          {polylinesList.map((polyline, i) => (\n            <Polyline pathOptions={colorOptions[i % 5]} positions={polyline} />\n          ))}\n          <Marker position={[0, 0]} >\n            <Popup>\n              A pretty CSS3 popup. <br /> Easily customizable.\n            </Popup>\n          </Marker>\n        </MapContainer>\n      </div>\n    </div>\n  );\n}\nexport default Map;","import '../index.css';\nimport React from 'react';\n\nconst Flight = ({ flight }) => {\n\n  return (\n    <div className={'flight-info'}>\n      <p>Origen: {flight.origin[0]}, {flight.origin[1]}</p>\n      <p>Destino: {flight.destination[0]}, {flight.destination[1]}</p>\n      <p>Aerol√≠nea: {flight.airline}</p>\n      <p>Pasajeros:</p>\n      {flight.passengers.map((passenger) => (\n          <div>\n            <li>Nombre: {passenger.name}</li>\n            <li>Edad: {passenger.age}</li>\n          </div>\n\n        ))}\n    </div>\n  );\n};\n\nexport default Flight;","import '../index.css';\nimport React, {useState, useContext, useCallback, useEffect} from 'react';\nimport {SocketContext} from '../socket';\nimport Flight from './Flight.jsx';\n\n\nconst Dialog = ({}) => {\n\n  const socket = useContext(SocketContext);\n\n  const [flightsList, setFlightsList] = useState([]);\n\n  const handleFlights = useCallback((flights) => {\n    setFlightsList(flights);\n  }, []);\n\n\n  useEffect(() => {\n    // as soon as the component is mounted, do the following tasks:\n    // subscribe to socket events\n    socket.emit(\"FLIGHTS\", {});\n    //receive events\n    socket.on('FLIGHTS', flights => handleFlights(flights));\n\n    \n\n    return () => {\n\n    };\n  }, [socket, handleFlights]);\n\n  return (\n    <div>\n      <p>Vuelos</p>\n\n      <div className={'row-container'}>\n        {flightsList.map((flight) => (\n          <Flight flight={flight}/>\n        ))}\n      </div>\n\n    </div>\n  );\n};\n\nexport default Dialog;","import socketIOClient from 'socket.io-client';\nimport React, {useState, useContext, useCallback, useEffect, useRef,} from 'react';\n// const SOCKET_SERVER_URL = 'http://localhost:4000';\nconst SOCKET_SERVER_URL = 'http://tarea-3-websocket.2021-1.tallerdeintegracion.cl';\nconst NEW_CHAT_MESSAGE_EVENT = 'CHAT';\n\nconst ChatBack = () => {\n  const [messageObjects, setMessageObjects] = useState([]); // Sent and received messages\n  const socketRef = useRef();\n  useEffect(() => {\n    // Creates a WebSocket connection\n    socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\n      path: '/flights',\n      transports: ['websocket'],\n    });\n\n    // Listens for incoming messages\n    socketRef.current.on(NEW_CHAT_MESSAGE_EVENT, (incomingMessageObject) => {\n      // const incomingMessageObject = {\n      //   ...messageObject,\n      // };\n      setMessageObjects((messageObjects) => [...messageObjects, incomingMessageObject]);\n    });\n\n    // Destroys the socket reference\n    // when the connection is closed\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, []);\n\n  // Sends a message to the server that\n  // forwards it to all users in the same room\n\n  const sendMessageObject = (senderName, messageBody) => {\n    socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\n      name: senderName,\n      message: messageBody,\n    });\n  };\n\n  return { messageObjects, sendMessageObject };\n};\n\nexport default ChatBack;","import '../messages.css';\nimport ChatBack from '../chat-back';\nimport React, {useState, useContext, useCallback, useEffect} from 'react';\nimport {SocketContext} from '../socket';\nimport socketIOClient from 'socket.io-client';\n\n// const SOCKET_SERVER_URL = 'http://localhost:4000';\n// const SOCKET_SERVER_URL = 'http://tarea-3-websocket.2021-1.tallerdeintegracion.cl';\n// const NEW_CHAT_MESSAGE_EVENT = 'CHAT';\n\nconst Chat = (props) => {\n  const { messageObjects, sendMessageObject } = ChatBack(); // Creates a websocket and manages messaging\n\n  const [newMessage, setNewMessage] = useState(''); // Message to be sent\n  const SENDER_NAME = 'Agust√≠n';\n\n  const handleNewMessageChange = (event) => {\n    // Checks wether the change was becouse of an Enter key press event,\n    // so the newMessage Variable dos not update itsvalue\n    setNewMessage(event.target.value);\n  };\n\n  const handleSendMessage = () => {\n    sendMessageObject(SENDER_NAME, newMessage);\n    setNewMessage('');\n  };\n\n\n  function dateFormat(date){\n    var date1 = new Date(date);\n    return date1.toLocaleString()\n  }\n  return (\n    <div className=\"chat-room-container\">\n      <h4 className=\"room-name\">Chat de torre de control</h4>\n      <div className=\"messages-container\">\n        <ol className=\"messages-list\">\n          {messageObjects.map((messageObject, i) => (\n            <li\n              key={i}\n              className={`message-item ${\n                messageObject.name === SENDER_NAME ? 'my-message' : 'received-message'\n              }`}\n            >\n              <div className=\"chat-date\">{dateFormat(messageObject.date)}</div>\n              {messageObject.name} {': '}\n              {messageObject.message}\n            </li>\n          ))}\n        </ol>\n      </div>\n      <textarea\n        value={newMessage}\n        onChange={handleNewMessageChange}\n        placeholder=\"Write message...\"\n        className=\"new-message-input-field\"\n      />\n      <button onClick={handleSendMessage} className=\"send-message-button\">\n        Send\n      </button>\n    </div>\n  );\n};\n\nexport default Chat;","import React, { useState, useContext, useEffect } from 'react';\nimport {SocketContext, socket} from './socket';\nimport Map from './components/Map.jsx';\nimport Dialog from './components/Dialog.jsx';\nimport Chat from './components/Chat.jsx';\nimport './index.css';\n\n\nfunction App() {\n  \n  return (\n    <SocketContext.Provider value={socket}>\n      <div className=\"container\">\n        <div className=\"uno\">\n          <Map\n          />\n        </div>\n        <div className=\"dos\">\n          <Chat\n          />\n        </div>\n        <div className=\"tres\">\n          <Dialog\n          />\n        </div>\n\n      </div>\n    </SocketContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}